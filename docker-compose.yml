version: '3'
services:

  postgres:
    image: postgres
    networks:
      - mynet
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - APP_DB_USER=postgres
      - APP_DB_PASS=postgres
      - APP_DB_NAME=backendtest
      #- PGDATA=/data
    volumes:
      - ./db:/docker-entrypoint-initdb.d/

  config-service:
    image: fredyyamidarciniegasramirez/360-config-service
    networks:
      - mynet

  registry-service:
    image: fredyyamidarciniegasramirez/360-registry-service
    networks:
      - mynet
    depends_on:
      - config-service
    command: sh -c "/wait && java -jar registry-service.jar"
    environment:
      - WAIT_HOSTS=config-service:8081
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=20
      - WAIT_HOST_CONNECT_TIMEOUT=30
  
  gateway-service:
    image: fredyyamidarciniegasramirez/360-gateway-service
    networks:
      - mynet
    ports:
      - 8080:8080
    depends_on:
      - registry-service

  dealer-service:
    image: fredyyamidarciniegasramirez/360-dealer-service
    networks:
      - mynet
    ports:
      - 8092:8092
    depends_on:
      - registry-service
      - postgres
    command: sh -c "/wait && java -jar dealer-service.jar"
    environment:
      - WAIT_HOSTS=config-service:8081
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=20
      - WAIT_HOST_CONNECT_TIMEOUT=30

  usuario-service:
    image: usuario-service
    networks:
      - mynet
    ports:
      - 8091:8091
    depends_on:
      - registry-service
      - postgres
    command: sh -c "/wait && java -jar usuario-service.jar"
    environment:
      - WAIT_HOSTS=config-service:8081
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=20
      - WAIT_HOST_CONNECT_TIMEOUT=30

networks:
  mynet: